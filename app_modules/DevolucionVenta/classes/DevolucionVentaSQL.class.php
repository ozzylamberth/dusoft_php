<?php	/**	* @package IPSOFT-SIIS	* @version $Id:DevolucionVentaSQL.class.php,v 1.1 2010/06/03 	* @copyright (C) 2009 IPSOFT - SA (www.ipsoft-sa.com)	* @author Sandra Viviana Pantoja Torres 	*/  IncludeClass('BodegasDocumentos');	class DevolucionVentaSQL extends ConexionBD	{		var $bodegas_doc_id;	var $numeracion;	  	/*  	* Constructor de la clase  	*/    function DevolucionVentaSQL(){$this->debug = false;}  	/**  	* Funcion donde se Consulta los permisos que el usuario tiene para acceder al modulo   	* @return array $datos vector que contiene la informacion   	*/      function ObtenerPermisos()      {        			$sql  = "SELECT a.empresa_id, ";  			$sql .= "       b.razon_social AS descripcion1, ";  			$sql .= "       b.sw_activa, ";  			$sql .= "       a.centro_utilidad, ";  			$sql .= "       c.descripcion AS descripcion2, ";  			$sql .= "       a.usuario_id, ";        $sql .= "       DE.departamento, ";        $sql .= "       DE.descripcion AS descripcion3, ";        $sql .= "       e.bodega,  ";  			$sql .= "       e.descripcion AS descripcion4,   ";        $sql .= "       BN.bodegas_doc_id ";  			$sql .= "FROM 	userpermisos_Devolucion_por_venta_farmacia a, ";  			$sql .= "       empresas b, ";  			$sql .= "       centros_utilidad c, ";  			$sql .= "       bodegas e, ";  			$sql .= "       bodegas_doc_numeraciones BN, ";  			$sql .= "       departamentos DE ";  			$sql .= "WHERE  a.usuario_id = ".UserGetUID()."  ";  			$sql .= "AND 	  a.empresa_id = b.empresa_id ";  			$sql .= "AND 	  a.empresa_id = c.empresa_id ";  			$sql .= "AND 	  a.centro_utilidad = c.centro_utilidad ";  			$sql .= "AND 	  c.empresa_id = e.empresa_id ";  			$sql .= "AND 	  c.centro_utilidad = e.centro_utilidad  ";  			$sql .= "AND 	  a.empresa_id = c.empresa_id ";        $sql .= "AND    b.sw_activa = '1' ";        $sql .= "AND    b.sw_vende = '1' ";        $sql .= "AND    e.empresa_id = BN.empresa_id ";        $sql .= "AND    e.centro_utilidad = BN.centro_utilidad ";        $sql .= "AND    e.departamento = DE.departamento ";        $sql .= "AND    e.bodega = BN.bodega ";            if(!$rst = $this->ConexionBaseDatos($sql))        return false;        $datos = array();        while(!$rst->EOF)        {          $datos[$rst->fields[1]][$rst->fields[4]][$rst->fields[7]][$rst->fields[9]] = $rst->GetRowAssoc($ToUpper = false);          $rst->MoveNext();        }        $rst->Close();        return $datos;      }  /**  	* Funcion donde se Consulta los prefijos de la factura que pertenece a venta directa  	* @return array $datos vector que contiene la informacion   	*/      function ConsultarPrefijos_Venta_Directa($empresa)      {            $sql = "  SELECT  Distinct prefijo                   FROM    facturas_documentos_bodega                  where   empresa_id='".$empresa['empresa_id']."' ";                                 if(!$rst = $this->ConexionBaseDatos($sql))                  return false;                  $datos = array();                  while (!$rst->EOF)			                  {                  $datos[] = $rst->GetRowAssoc($ToUpper = false);                  $rst->MoveNext();                  }                  $rst->Close();                  return $datos;      }  /*		* Funcion donde se Consultan los tipos de identificacion 		* @return array $datos vector que contiene la informacion de la consulta.    */      function ConsultarTipoId()      {  			$sql  = "SELECT    tipo_id_tercero, descripcion ";  			$sql .= "FROM      tipo_id_terceros ";  			$sql .= "ORDER BY  descripcion ";        if(!$rst = $this->ConexionBaseDatos($sql))        return false;        $datos = array();        while(!$rst->EOF)        {          $datos[] = $rst->GetRowAssoc($ToUpper);          $rst->MoveNext();        }        $rst->Close();        return $datos;      }  /*		* Funcion donde se Consulta las facturas.  de venta directa		* @return array $datos vector que contiene la informacion de la consulta.	*/      function Consultar_Facturas_VD($empresa,$filtros,$offset)      {			        $sql = " SELECT   f.prefijo,                          f.factura_fiscal,                          to_char(f.fecha_registro, 'DD-MM-YYYY') as  fecha_registro,                          f.total_factura,                          f.tipo_id_tercero,                          f.tercero_id,                          f.documento_id,                          f.tipo_factura,                          u.nombre,                          t.nombre_tercero as tercero,                          f.saldo                                        FROM    fac_facturas f,                        system_usuarios u,                        terceros t                WHERE   f.usuario_id=u.usuario_id                and     f.prefijo = '".$filtros['pref']."'                and     f.empresa_id='".$empresa."'                and     f.tipo_id_tercero=t.tipo_id_tercero                and     f.tercero_id=t.tercero_id                 and     f.estado='0' ";          			if($filtros['numero']!= "" )    			{    				$sql.="  and f.factura_fiscal= ".$filtros['numero']."  ";    			}          if($filtros['tipo']!= "-1" )    			{            $sql.="  and f.tipo_id_tercero= '". $filtros['tipo']."'  ";          }        	if($filtros['identificacion'] != "")    			$sql .= " and   f.tercero_id  ILIKE '%".$filtros['identificacion']."%' ";            			if($filtros['nombre'] != "")    			$sql .= " AND     t.nombre_tercero ILIKE '%".$filtros['nombre']."%' ";              			$cont="select COUNT(*) from (".$sql.") AS A";    			$this->ProcesarSqlConteo($cont,$offset);    			$sql .= "ORDER BY f.factura_fiscal ";    			$sql .= "LIMIT ".$this->limit." OFFSET ".$this->offset;    			if(!$rst = $this->ConexionBaseDatos($sql))	return false;    			$datos = array();    			while (!$rst->EOF)    			{    				$datos[] = $rst->GetRowAssoc($ToUpper = false);    				$rst->MoveNext();    			}    			$rst->Close();    			return $datos;      }    /*	 	* Funcion donde se Consulta los documentos de bodega por las ventas		* @return array $datos vector que contiene la informacion de la consulta.	   */      function Consultar_Documento_Bodega_Ventas($empresa,$prefijo,$fiscal)      {          $sql = " SELECT bodegas_doc_id,                          bodegas_numeracion                   FROM   facturas_documentos_bodega                   WHERE  empresa_id = '".trim($empresa['empresa_id'])."'                    AND    factura_fiscal = '".trim($fiscal)."'                   AND    prefijo = '".trim($prefijo)."' ";              if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;           }    /*	 	* Funcion donde se Consulta el costo y las observaciones de los documentos  de ventas		* @return array $datos vector que contiene la informacion de la consulta.	   */      Function Consultar_inf_Documento_Bodega_Ventas($bodegas_doc_id,$numeracion)      {               $sql = " SELECT  total_costo,                         observacion                 FROM    bodegas_documentos                 WHERE   bodegas_doc_id = '".$bodegas_doc_id."'                 AND     numeracion = '".$numeracion."' ";                  if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;           }    /*	 	* Funcion donde se Consulta el detalle de las facturas de ventas		* @return array $datos vector que contiene la informacion de la consulta.	   */      function consultar_detalle_factura_venta($bodegas_doc_id,$numeracion,$empresa)      {                 $sql = "SELECT  b.codigo_producto,                        b.cantidad,                        b.total_costo,                        b.fecha_vencimiento,                        b.lote,                        i.descripcion,                        i.contenido_unidad_venta,                        u.descripcion as unidad,                        s.descripcion as molecula,                        c.descripcion as laboratorio,                        b.total_costo as precio_venta						--inv.precio_venta                                                                        FROM    bodegas_documentos_d b,                        inventarios_productos i LEFT JOIN inventarios inv                                       ON(i.codigo_producto = inv.codigo_producto and inv.empresa_id='".$empresa."'),                        unidades u,                        inv_subclases_inventarios s,                        inv_clases_inventarios   c                WHERE   b.codigo_producto=i.codigo_producto                 and    i.unidad_id=u.unidad_id                 and    i.grupo_id=s.grupo_id                 and    i.clase_id=s.clase_id                 and    i.subclase_id=s.subclase_id                 and    s.grupo_id=c.grupo_id                 and    s.clase_id=c.clase_id                 and    b.bodegas_doc_id = '".$bodegas_doc_id."'                 AND    b.numeracion = '".$numeracion."' ";                                if(!$rst = $this->ConexionBaseDatos($sql))	                           return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;          }   /*	 	* Funcion donde se ingresan  los documentos temporales		   * @return mixed        */	    function IngresarDocumentoTemporal($bodegas_doc,$request)      {                $this->ConexionTransaccion();        $sql  = "INSERT INTO tmp_bodegas_documentos ";        $sql .= " (";        $sql .= "   documento,";        $sql .= " 	fecha,";        $sql .= " 	total_costo,";        $sql .= " 	usuario_id,";        $sql .= " 	fecha_registro,";        $sql .= " 	bodegas_doc_id ";        $sql .= " )";        $sql .= "VALUES ";        $sql .= " (";        $sql .= "  NEXTVAL('tmp_bodegas_documentos_documento_seq'), ";        $sql .= "   NOW(),";        $sql .= "   0,";        $sql .= "  ".UserGetUID().",";        $sql .= "   NOW(),";        $sql .= "   ".$bodegas_doc." ";        $sql .= " ); ";		        if(!$rst = $this->ConexionTransaccion($sql))        return false;        $this->Commit();        return true;      }   		 /*	 	* Funcion donde se Consulta el maximo documento temporal 		* @return array $datos vector que contiene la informacion de la consulta.	   */		  function seleccionar_Maxdoc_tmp_id($bodegas_doc)		  {		      			$sql = "SELECT (COALESCE(MAX(documento),0)) AS documento FROM tmp_bodegas_documentos	";          $sql .= " Where bodegas_doc_id='".$bodegas_doc."'  and usuario_id=".UserGetUID()." " ;     			if(!$rst = $this->ConexionBaseDatos($sql))    			return false;    			$datos = array();    			while(!$rst->EOF)    			{    			$datos[] = $rst->GetRowAssoc($ToUpper);    			$rst->MoveNext();    			}    			$rst->Close();    			return $datos;		  }   /*	 	* Funcion donde se ingresan el detalle de los documentos temporales		   * @return mixed        */    function Ingresar_detalle_bodegas_document($bodegas_doc,$request,$documento_tmp)    {     // $this->debug=true;       $this->ConexionTransaccion();       $num=$request['contador'];       $num_rc=$request['contador_rc'];       $total=0;       for($k=0;$k<$num;$k++)       {          if($request['checkseleccionar'.$k] ==1)            {                                   $total_valor=($request['devolver'.$k]) * ($request['precio_venta'.$k]);                          $sql .= "INSERT INTO tmp_bodegas_documentos_d ";              $sql .= " (";              $sql .= "   consecutivo,";              $sql .= "   documento,";              $sql .= "   codigo_producto,";              $sql .= "   cantidad,";              $sql .= "   total_costo,";              $sql .= "   bodegas_doc_id,";              $sql .= "   lote, ";              $sql .= "   fecha_vencimiento ";              $sql .= " )";              $sql .= "VALUES ";              $sql .= " (";              $sql .= "   DEFAULT,";              $sql .= "   ".$documento_tmp.", ";              $sql .= "  '".$request['codigo_producto'.$k]."', ";              $sql .= "  ".$request['devolver'.$k].", ";              $sql .= "  ".$total_valor.", ";              $sql .= "   ".$bodegas_doc.", ";              $sql .= "  '".$request['lote'.$k]."', ";              $sql .= "  '".$request['fecha_vencimiento'.$k]."' ";                          $sql .= " ) ;";                            $total=$total + $total_valor;            }        }      $total_rc=0;      if($num_rc >0)      {              for($t=0;$t<$num_rc;$t++)        {             if($request['checkseleccionar_rc'.$t]==1)            {                            $total_valor_r=($request['devolver_rc'.$t])* ($request['precio_venta_rc'.$t]);                           $sql .= "INSERT INTO tmp_bodegas_documentos_d ";              $sql .= " (";              $sql .= "   consecutivo,";              $sql .= "   documento,";              $sql .= "   codigo_producto,";              $sql .= "   cantidad,";              $sql .= "   total_costo,";              $sql .= "   bodegas_doc_id,";              $sql .= "   lote, ";              $sql .= "   fecha_vencimiento ";              $sql .= " )";              $sql .= "VALUES ";              $sql .= " (";              $sql .= "   DEFAULT,";              $sql .= "   ".$documento_tmp.", ";              $sql .= "  '".$request['codigo_producto_rc'.$t]."', ";              $sql .= "  ".$request['devolver_rc'.$t].", ";              $sql .= "  ".$total_valor_r.", ";              $sql .= "   ".$bodegas_doc.", ";              $sql .= "  '".$request['lote_rc'.$t]."', ";              $sql .= "  '".$request['fecha_vencimiento_rc'.$t]."' ";              $sql .= " ) ;";                $total_rc=$total_rc+$total_valor_r;            }        }                          }      $total_final=$total_rc + $total;            $sql .= "UPDATE tmp_bodegas_documentos ";        $sql .= "SET    total_costo = ".$total_final."";        $sql .= "WHERE  	documento = '".$documento_tmp."' ";        $sql .= "AND    	bodegas_doc_id = '".$bodegas_doc."' ";                if(!$rst = $this->ConexionTransaccion($sql))            return false;                      $this->Commit();                    return $documento;    }     /*	 	* Funcion donde se Consulta  el costo del documento temporal		* @return array $datos vector que contiene la informacion de la consulta.	   */    function Consultar_Costo_total_Dev($documento,$bodegas_doc)    {               $sql = " SELECT total_costo                 FROM   tmp_bodegas_documentos                 WHERE   documento = '".$documento."'                 AND    bodegas_doc_id = '".$bodegas_doc."'                 AND    usuario_id=".UserGetUID()." ";                               if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;                }    /*	 	* Funcion donde se Consulta los motivos de anulacion de una factura		* @return array $datos vector que contiene la informacion de la consulta.	   */      Function Consultar_Motivos_Anulacion()      {        $sql = " SELECT  motivo_id,                         motivo_descripcion                  FROM   motivos_anulacion_facturas                  WHERE  sw_activo = '1' ";              if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;           }        /*	 	* Funcion donde se Consulta el prefijo del documento de las facturas anuladas		* @return array $datos vector que contiene la informacion de la consulta.	   */      function Consultar_Prefijo_Documentos($documento_id,$empresa)      {        $sql = " SELECT prefijo,numeracion                 FROM   documentos WHERE  documento_id = '".$documento_id."'                 and  empresa_id= '".$empresa."'         ; ";                               if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;         }    /*	 	* Funcion donde se Consulta la informacion temporal del documento temporal		* @return array $datos vector que contiene la informacion de la consulta.	   */      function ConsultarInformacionTmp($request)      {               $sql = " SELECT    total_costo,                            observacion                   FROM     tmp_bodegas_documentos                   WHERE    documento = '".$request['temporal']."'                    AND      bodegas_doc_id = '".$request['bodegas_doc']."' ";                                  if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;         }        /**/    function Consultar_numeracion_bodegas_doc($request)    {       $sql = "  SELECT numeracion                FROM   bodegas_doc_numeraciones                WHERE  bodegas_doc_id = '".$request['bodegas_doc']."' ";                              if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;     }   /*	 	* Funcion donde se Consulta la el detalle del temporal		* @return array $datos vector que contiene la informacion de la consulta.	   */      function Consultar_Detalle_tmp($request)      {            $sql = " SELECT   codigo_producto,                          cantidad,                          total_costo,                          bodegas_doc_id,                          fecha_vencimiento,                          lote                FROM     tmp_bodegas_documentos_d                 WHERE    documento = '".$request['temporal']."'                 AND      bodegas_doc_id = '".$request['bodegas_doc']."' ";               if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;       }     /*	 	* Funcion donde se Consulta los conceptos de la nota credito		* @return array $datos vector que contiene la informacion de la consulta.	   */     function Consultar_Conceptos_nota_credito($empresa)     {          $sql= " SELECT nota_contado_concepto_id,                         descripcion                  FROM   notas_contado_conceptos                  WHERE  empresa_id = '".trim($empresa)."'                   AND    sw_devolucion_venta_d = '1' ";                                if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;                     }    /*	 	* Funcion donde se realiza la anulacion de la factura		   * @return mixed	   */      Function Anulacion_Facturas_completa($empresa,$prefijo,$ffiscal,$request,$inf_prefijo_FA,$tercero,$documento_id,$datos,$numeracion,$datos_d,$rc_prefijo)      {		  print_r($request);          $this->ConexionTransaccion();          $sql  = "LOCK TABLE bodegas_doc_numeraciones IN ROW EXCLUSIVE MODE";          if(!$rst = $this->ConexionTransaccion($sql))          return false;          $sql  = "UPDATE bodegas_doc_numeraciones ";          $sql .= "SET    numeracion = numeracion + 1 ";          $sql .= "WHERE  bodegas_doc_id = ".$request['bodegas_doc']." ";          if(!$rst = $this->ConexionTransaccion($sql))          return false;          $sql  = "SELECT numeracion ";          $sql .= "FROM   bodegas_doc_numeraciones ";          $sql .= "WHERE  bodegas_doc_id = ".$request['bodegas_doc']." ";          if(!$rst = $this->ConexionTransaccion($sql))          return false;          $numeracion = $rst->GetRowAssoc($ToUpper = false);          $rst->MoveNext();          		  $this->numeracion=$numeracion['numeracion'];		  $this->bodegas_doc_id=$request['bodegas_doc'];		            $sql  = "INSERT INTO bodegas_documentos ";          $sql .= "   ( ";          $sql .= "     bodegas_doc_id,";          $sql .= "		  numeracion,";          $sql .= "		  fecha,";          $sql .= "		  total_costo,";          $sql .= "		  observacion,";          $sql .= "		  usuario_id,";          $sql .= "		  fecha_registro ";          $sql .= "		) ";          $sql .= "SELECT bodegas_doc_id, ";                $sql .= "       ".$numeracion['numeracion']." AS numeracion,";          $sql .= " 	    fecha,";          $sql .= " 	    total_costo,";          $sql .= "       'DEVOLUCION POR VENTA' AS observacion,";          $sql .= " 	    usuario_id,";          $sql .= " 	    NOW() ";          $sql .= "FROM   tmp_bodegas_documentos ";          $sql .= "WHERE  documento = ".$request['temporal']." ";          if(!$rst = $this->ConexionTransaccion($sql))          return false;            $sql  = "INSERT INTO bodegas_documentos_d ";            $sql .= "     ( ";            $sql .= "		    codigo_producto,";            $sql .= "		    cantidad,";            $sql .= "		    total_costo,";            $sql .= "		    bodegas_doc_id,";            $sql .= "		    numeracion, ";            $sql .= "       fecha_vencimiento, ";            $sql .= "       lote ";            $sql .= "		  ) ";            $sql .= "SELECT codigo_producto,";            $sql .= "       SUM(cantidad) AS cantidad,";            $sql .= "       SUM(total_costo) AS total_costo,";            $sql .= "       bodegas_doc_id,";            $sql .= "       ".$numeracion['numeracion']." AS numeracion,";            $sql .= "       fecha_vencimiento, ";            $sql .= "       lote ";            $sql .= "FROM   tmp_bodegas_documentos_d ";            $sql .= "WHERE  documento = ".$request['temporal']." ";            $sql .= "GROUP BY codigo_producto,bodegas_doc_id,numeracion,fecha_vencimiento,lote ";                        if(!$rst = $this->ConexionTransaccion($sql))            return false;                               $sql = "";              foreach($datos_d as $key => $dtl)          {            $sql .= "UPDATE existencias_bodegas ";            $sql .= "SET    existencia = existencia + ".$dtl['cantidad']." ";            $sql .= "WHERE  empresa_id = '".$empresa['empresa_id']."' ";            $sql .= "AND    centro_utilidad = '".$empresa['centro_utilidad']."' ";            $sql .= "AND    bodega = '".$empresa['bodega']."' ";            $sql .= "AND    codigo_producto = '".$dtl['codigo_producto']."'; ";                        /*if(!$rst = $this->ConexionTransaccion($sql))              return false;*/            $sql .= "UPDATE existencias_bodegas_lote_fv ";            $sql .= "SET    existencia_actual = existencia_actual + ".$dtl['cantidad']." ";            $sql .= "WHERE  empresa_id = '".$empresa['empresa_id']."' ";            $sql .= "AND    centro_utilidad = '".$empresa['centro_utilidad']."' ";            $sql .= "AND    bodega = '".$empresa['bodega']."' ";            $sql .= "AND    codigo_producto = '".$dtl['codigo_producto']."' ";            $sql .= "AND    lote = '".$dtl['lote']."' ";            $sql .= "AND    fecha_vencimiento = '".$dtl['fecha_vencimiento']."'; ";          }          if(!$rst = $this->ConexionTransaccion($sql))              return false;		  		            $sql  = "DELETE FROM tmp_bodegas_documentos ";          $sql .= "WHERE  documento = ".$request['temporal']."; ";                  if(!$rst = $this->ConexionTransaccion($sql))          return false;                         $sql  = "INSERT INTO auditoria_anulacion_fac_facturas";    			$sql .= "				(	empresa_id, ";    			$sql .= "					prefijo, ";    			$sql .= "					factura_fiscal, ";    			$sql .= "					observacion, ";    			$sql .= "					fecha_registro, ";    			$sql .= "					usuario_id, ";    			$sql .= "					motivo_id ) ";    			$sql .= "VALUES	(	'".$empresa['empresa_id']."', ";    			$sql .= "        	'".$prefijo."',";    			$sql .= "					 ".$ffiscal.", ";    			$sql .= "					'".$request['observacion']."',";    			$sql .= "					 NOW(),";    			$sql .= "					 ".UserGetUID().", ";    			$sql .= "					 ".$request['motivo_anula']."); ";                  if(!$rst = $this->ConexionTransaccion($sql))          return false;                    $sql = " INSERT INTO  notas_credito_anulacion_facturas( ";          $sql .= "				empresa_id,";          $sql .= "				prefijo,";          $sql .= "				nota_credito_id,";          $sql .= "				prefijo_factura,";          $sql .= "				factura_fiscal,";          $sql .= "				valor_nota,";          $sql .= "				fecha_registro,";          $sql .= "				usuario_id,";          $sql .= "				tipo_id_tercero, ";          $sql .= "				tercero_id, ";          $sql .= "				documento_id) ";          $sql .= "VALUES (";          $sql .= "			'".$empresa['empresa_id']."', ";          $sql .= "			'".$inf_prefijo_FA[0]['prefijo']."', ";          $sql .= "		 	 ".($inf_prefijo_FA[0]['numeracion']+1).", ";          $sql .= "			'".$prefijo."', ";          $sql .= "		 	 ".$ffiscal.", ";          $sql .= "		 	 ".$request['total_costo'].", ";          $sql .= "		 		NOW(), ";          $sql .= "		 	 ".UserGetUID().", ";          $sql .= "			'".$tercero[0]."', ";          $sql .= "			'".$tercero[1]."', ";          $sql .= "		 	 ".$documento_id." ";          $sql .= "		); ";                                if(!$rst = $this->ConexionTransaccion($sql))          return false;                     $sql  = "LOCK TABLE documentos IN ROW EXCLUSIVE MODE; ";//Bloqueo de tabla                 if(!$rst = $this->ConexionTransaccion($sql))          return false;          $sql  = "UPDATE documentos ";          $sql .= "SET    numeracion = numeracion +1 ";          $sql .= "WHERE  documento_id = ".$documento_id." ";          $sql .= "AND    empresa_id = '".$empresa['empresa_id']."' ";                              if(!$rst = $this->ConexionTransaccion($sql))          return false;          $sql  = "UPDATE fac_facturas ";          $sql .= "SET 		estado = '3' ";          $sql .= "WHERE 	prefijo = '".$prefijo."' ";          $sql .= "AND		factura_fiscal = ".$ffiscal."; ";          if(!$rst = $this->ConexionBaseDatos($sql)) return false;          $sql  = "UPDATE fac_facturas_contado ";          $sql .= "SET 		estado = '3' ";          $sql .= "WHERE 	prefijo = '".$prefijo."' ";          $sql .= "AND		factura_fiscal = ".$ffiscal." ";          if(!$rst = $this->ConexionBaseDatos($sql)) return false;                                          $sql = " INSERT INTO  rc_devoluciones_ventas( ";          $sql .= "				devolucionv_id,";          $sql .= "				prefijo,";          $sql .= "				empresa_id,";          $sql .= "				centro_utilidad,";          $sql .= "				prefijo_factura,";          $sql .= "				factura_fiscal,";          $sql .= "				total_devolucion,";          $sql .= "				estado,";          $sql .= "				fecha_registro, ";          $sql .= "				bodegas_doc_id, ";          $sql .= "				bodegas_numeracion, ";          $sql .= "       usuario_id )";          $sql .= "VALUES (";          $sql .= " nextval('rc_devoluciones_ventas_devolucionv_id_seq'), ";          $sql .= "     '".$rc_prefijo."', ";          $sql .= "			'".$empresa['empresa_id']."', ";          $sql .= "			'".$empresa['centro_utilidad']."', ";          $sql .= "     '".$prefijo."',";          $sql .= "			 ".$ffiscal.", ";          $sql .= "      0, ";          $sql .= "      '0', ";          $sql .= "     now(), ";          $sql .= "   ".$request['bodegas_doc'].", ";          $sql .="   ".$numeracion['numeracion']." , ";          $sql .= "					 ".UserGetUID()."  ); ";                    if(!$rst = $this->ConexionTransaccion($sql))          return false;          $this->Commit();          return $documento;      }    /*	 	* Funcion donde se realiza la devolucion parcial de una factura		   * @return mixed	   */            function  Devolucion_Factura_parcial($empresa,$prefijo,$ffiscal,$request,$datos_d,$inf_prefijo_FA,$documento_id,$tercero,$rc_prefijo)      {		  $this->ConexionTransaccion();          $sql  = "LOCK TABLE bodegas_doc_numeraciones IN ROW EXCLUSIVE MODE";          if(!$rst = $this->ConexionTransaccion($sql))          return false;          $sql  = "UPDATE bodegas_doc_numeraciones ";          $sql .= "SET    numeracion = numeracion + 1 ";          $sql .= "WHERE  bodegas_doc_id = ".$request['bodegas_doc']." ";          if(!$rst = $this->ConexionTransaccion($sql))          return false;          $sql  = "SELECT numeracion ";          $sql .= "FROM   bodegas_doc_numeraciones ";          $sql .= "WHERE  bodegas_doc_id = ".$request['bodegas_doc']." ";          if(!$rst = $this->ConexionTransaccion($sql))          return false;          $numeracion = $rst->GetRowAssoc($ToUpper = false);          $rst->MoveNext();          		$this->numeracion=$numeracion['numeracion'];		$this->bodegas_doc_id=$request['bodegas_doc'];		            $sql  = "INSERT INTO bodegas_documentos ";          $sql .= "   ( ";          $sql .= "     bodegas_doc_id,";          $sql .= "		  numeracion,";          $sql .= "		  fecha,";          $sql .= "		  total_costo,";          $sql .= "		  observacion,";          $sql .= "		  usuario_id,";          $sql .= "		  fecha_registro ";          $sql .= "		) ";          $sql .= "SELECT bodegas_doc_id, ";                $sql .= "       ".$numeracion['numeracion']." AS numeracion,";          $sql .= " 	    fecha,";          $sql .= " 	    total_costo,";          $sql .= "       'DEVOLUCION POR VENTA' AS observacion,";          $sql .= " 	    usuario_id,";          $sql .= " 	    NOW() ";          $sql .= "FROM   tmp_bodegas_documentos ";          $sql .= "WHERE  documento = ".$request['temporal']." ";          if(!$rst = $this->ConexionTransaccion($sql))          return false;            $sql  = "INSERT INTO bodegas_documentos_d ";            $sql .= "     ( ";            $sql .= "		    codigo_producto,";            $sql .= "		    cantidad,";            $sql .= "		    total_costo,";            $sql .= "		    bodegas_doc_id,";            $sql .= "		    numeracion, ";            $sql .= "       fecha_vencimiento, ";            $sql .= "       lote ";            $sql .= "		  ) ";            $sql .= "SELECT codigo_producto,";            $sql .= "       SUM(cantidad) AS cantidad,";            $sql .= "       SUM(total_costo) AS total_costo,";            $sql .= "       bodegas_doc_id,";            $sql .= "       ".$numeracion['numeracion']." AS numeracion,";            $sql .= "       fecha_vencimiento, ";            $sql .= "       lote ";            $sql .= "FROM   tmp_bodegas_documentos_d ";            $sql .= "WHERE  documento = ".$request['temporal']." ";            $sql .= "GROUP BY codigo_producto,bodegas_doc_id,numeracion,fecha_vencimiento,lote ";                        if(!$rst = $this->ConexionTransaccion($sql))            return false;                                             foreach($datos_d as $key => $dtl)          {            $sql  = "UPDATE existencias_bodegas ";            $sql .= "SET    existencia = existencia + ".$dtl['cantidad']." ";            $sql .= "WHERE  empresa_id = '".$empresa['empresa_id']."' ";            $sql .= "AND    centro_utilidad = '".$empresa['centro_utilidad']."' ";            $sql .= "AND    bodega = '".$empresa['bodega']."' ";            $sql .= "AND    codigo_producto = '".$dtl['codigo_producto']."' ";                        if(!$rst = $this->ConexionTransaccion($sql))              return false;            $sql  = "UPDATE existencias_bodegas_lote_fv ";            $sql .= "SET    existencia_actual = existencia_actual + ".$dtl['cantidad']." ";            $sql .= "WHERE  empresa_id = '".$empresa['empresa_id']."' ";            $sql .= "AND    centro_utilidad = '".$empresa['centro_utilidad']."' ";            $sql .= "AND    bodega = '".$empresa['bodega']."' ";            $sql .= "AND    codigo_producto = '".$dtl['codigo_producto']."' ";            $sql .= "AND    lote = '".$dtl['lote']."' ";            $sql .= "AND    fecha_vencimiento = '".$dtl['fecha_vencimiento']."' ";            if(!$rst = $this->ConexionTransaccion($sql))              return false;          }                    $sql  = "DELETE FROM tmp_bodegas_documentos ";          $sql .= "WHERE  documento = ".$request['temporal']."; ";                  if(!$rst = $this->ConexionTransaccion($sql))          return false;                           $sql = " INSERT INTO  notas_contado_credito( ";          $sql .= "				empresa_id,";          $sql .= "				prefijo,";          $sql .= "				numero,";          $sql .= "				prefijo_factura,";          $sql .= "				factura_fiscal,";          $sql .= "				valor_nota,";          $sql .= "				fecha_registro,";          $sql .= "				usuario_id,";          $sql .= "				observacion, ";          $sql .= "				documento_id, ";          $sql .= "				estado) ";          $sql .= "VALUES (";          $sql .= "			'".$empresa['empresa_id']."', ";          $sql .= "			'".$inf_prefijo_FA[0]['prefijo']."', ";          $sql .= "		 	 ".($inf_prefijo_FA[0]['numeracion']+1).", ";          $sql .= "			'".$prefijo."', ";          $sql .= "		 	 ".$ffiscal.", ";          $sql .= "		 	 ".$request['valor_productos'].", ";          $sql .= "		 		NOW(), ";          $sql .= "		 	 ".UserGetUID().", ";          $sql .= "		 	 '".$request['observacion']."', ";          $sql .= "		 	 ".$documento_id.", ";          $sql .= "		 	 '1' ";          $sql .= "		); ";                                if(!$rst = $this->ConexionTransaccion($sql))          return false;                    $sql = " INSERT INTO  notas_contado_credito_d( ";          $sql .= "			  notas_contado_credito_d_id,";          $sql .= "				empresa_id,";          $sql .= "				numero,";          $sql .= "				prefijo,";          $sql .= "       nota_contado_concepto_id, ";          $sql .= "       valor, ";          $sql .= "       tercero_id, ";          $sql .= "       tipo_id_tercero) ";          $sql .= "VALUES (";          $sql .= "      nextval('notas_contado_credito_d_notas_contado_credito_d_id_seq'), ";          $sql .= "			'".$empresa['empresa_id']."', ";          $sql .= "		 	 ".($inf_prefijo_FA[0]['numeracion']+1).", ";          $sql .= "			'".$inf_prefijo_FA[0]['prefijo']."', ";          $sql .= "		 	 '".$request['concepto']."', ";          $sql .= "		 	 ".$request['valor_productos'].", ";          $sql .= "			'".$tercero[1]."', ";          $sql .= "			'".$tercero[0]."' ";          $sql .= "		); ";                                if(!$rst = $this->ConexionTransaccion($sql))          return false;                    $sql  = "LOCK TABLE documentos IN ROW EXCLUSIVE MODE; ";//Bloqueo de tabla                 if(!$rst = $this->ConexionTransaccion($sql))          return false;          $sql  = "UPDATE documentos ";          $sql .= "SET    numeracion = numeracion +1 ";          $sql .= "WHERE  documento_id = ".$documento_id." ";          $sql .= "AND    empresa_id = '".$empresa['empresa_id']."' ";                              if(!$rst = $this->ConexionTransaccion($sql))          return false;           $sql = " INSERT INTO  rc_devoluciones_ventas( ";          $sql .= "				devolucionv_id,";          $sql .= "				prefijo,";          $sql .= "				empresa_id,";          $sql .= "				centro_utilidad,";          $sql .= "				prefijo_factura,";          $sql .= "				factura_fiscal,";          $sql .= "				total_devolucion,";          $sql .= "				estado,";          $sql .= "				fecha_registro, ";          $sql .= "				bodegas_doc_id, ";          $sql .= "				bodegas_numeracion, ";          $sql .= "       usuario_id )";          $sql .= "VALUES (";          $sql .= " nextval('rc_devoluciones_ventas_devolucionv_id_seq'), ";          $sql .= "     '".$rc_prefijo."', ";          $sql .= "			'".$empresa['empresa_id']."', ";          $sql .= "			'".$empresa['centro_utilidad']."', ";          $sql .= "     '".$prefijo."',";          $sql .= "			 ".$ffiscal.", ";          $sql .= "     ".$request['total_devolver'].", ";          $sql .= "      '0', ";          $sql .= "     now(), ";          $sql .= "   ".$request['bodegas_doc'].", ";          $sql .="   ".$numeracion['numeracion']." , ";          $sql .= "					 ".UserGetUID()."  ); ";                    if(!$rst = $this->ConexionTransaccion($sql))          return false;          $this->Commit();                    return $documento;          }     /*	 	* Funcion donde se realiza la consulta de las facturas que tienen devoluciones		* @return array $datos vector que contiene la informacion de la consulta.	   */      function Consultar_rc($empresa,$prefijo,$numero,$prefijo_devol)      {              $sql = " SELECT  (COALESCE(MAX(bodegas_numeracion),0)) AS bodegas_numeracion ,bodegas_doc_id                FROM    rc_devoluciones_ventas                WHERE   prefijo = '".$prefijo_devol."'                AND     empresa_id = '".$empresa['empresa_id']."'                AND     centro_utilidad = '".$empresa['centro_utilidad']."'                AND     prefijo_factura = '".$prefijo."'                 AND     factura_fiscal = '".$numero."'                GROUP BY   bodegas_doc_id              ";            if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;       }     /*	 	* Funcion donde  se consultan  los productos que no tienen devoluciones 		* @return array $datos vector que contiene la informacion de la consulta.	   */      function Productos_Sin_Devolucion_Factura($bodegas_doc_id,$numeracion,$bodegas_doc_id_rc,$numeracion_rc,$empresa)      {         $sql = " select b.codigo_producto ||' '||b.lote||' '||b.fecha_vencimiento as producto,                        b.codigo_producto,                        b.cantidad,                        b.total_costo,                        b.fecha_vencimiento,                        b.lote,                        i.descripcion,                        i.contenido_unidad_venta,                        u.descripcion as unidad,                        s.descripcion as molecula,                        c.descripcion as laboratorio,                        b.total_costo as precio_venta						--inv.precio_venta                                       from   bodegas_documentos_d b,                      inventarios_productos i LEFT JOIN inventarios inv                                       ON(i.codigo_producto = inv.codigo_producto and inv.empresa_id='".$empresa."'),                      unidades u,                      inv_subclases_inventarios s,                      inv_clases_inventarios   c               WHERE  b.codigo_producto=i.codigo_producto               and    i.unidad_id=u.unidad_id               and    i.grupo_id=s.grupo_id               and    i.clase_id=s.clase_id               and    i.subclase_id=s.subclase_id               and    s.grupo_id=c.grupo_id               and    s.clase_id=c.clase_id               and    b.bodegas_doc_id =".$bodegas_doc_id."               and    b.numeracion = ".$numeracion."               and    b.codigo_producto ||' '||b.lote||' '||b.fecha_vencimiento  not in( select codigo_producto ||' '||lote||' '||fecha_vencimiento as producto                                       from   bodegas_documentos_d                                        where  bodegas_doc_id =".$bodegas_doc_id_rc."                                       AND     numeracion = ".$numeracion_rc."); ";                             if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;       }    /*	 	* Funcion donde  se consultan  el detalle de los productos que tienen devoluciones 		* @return array $datos vector que contiene la informacion de la consulta.	   */       function consultar_detalle_factura_venta_rc($bodegas_doc_id,$numeracion,$bodegas_doc_id_rc,$numeracion_rc,$empresa)    {               $sql = " select b.codigo_producto ||' '||b.lote||' '||b.fecha_vencimiento as producto,                      b.codigo_producto,                      b.cantidad,                      b.total_costo,                      b.fecha_vencimiento,                      b.lote,                      i.descripcion,                      i.contenido_unidad_venta,                      u.descripcion as unidad,                      s.descripcion as molecula,                      c.descripcion as laboratorio,                      b.total_costo as precio_venta					  --inv.precio_venta               from   bodegas_documentos_d b,                      inventarios_productos i LEFT JOIN inventarios inv                                       ON(i.codigo_producto = inv.codigo_producto and inv.empresa_id='".$empresa."'),                      unidades u,                      inv_subclases_inventarios s,                      inv_clases_inventarios   c               WHERE  b.codigo_producto=i.codigo_producto               and    i.unidad_id=u.unidad_id               and    i.grupo_id=s.grupo_id               and    i.clase_id=s.clase_id               and    i.subclase_id=s.subclase_id               and    s.grupo_id=c.grupo_id               and    s.clase_id=c.clase_id               and    b.bodegas_doc_id =".$bodegas_doc_id."               and    b.numeracion = ".$numeracion."               and    b.codigo_producto ||' '||b.lote||' '||b.fecha_vencimiento  in( select codigo_producto ||' '||lote||' '||fecha_vencimiento as producto                                       from   bodegas_documentos_d                                        where  bodegas_doc_id =".$bodegas_doc_id_rc."                                       AND     numeracion = ".$numeracion_rc."); ";                                if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;        }    /*	 	* Funcion donde  se consultan las cantidades del producto que se a devuelto		* @return array $datos vector que contiene la informacion de la consulta.	   */      function Consultar_Cantidad_Producto($codigo_producto,$fecha_vencimiento,$lote,$bodegas_doc_id,$numeracion)      {              $sql = "  SELECT   sum(cantidad) as cantidad                   FROM    bodegas_documentos_d                   WHERE   codigo_producto = '".trim($codigo_producto)."'                    AND     bodegas_doc_id = '".trim($bodegas_doc_id)."' 				   AND	  numeracion = '".trim($numeracion)."'                   AND     fecha_vencimiento = '".trim($fecha_vencimiento)."'                   AND     lote = '".trim($lote)."' ";                                 if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;                      }      /*	 	* Funcion donde  se eliminan los documentos temporales		* @return array $datos vector que contiene la informacion de la consulta.	   */      function EliminarTemportal($request)      {                  $sql  = "DELETE FROM tmp_bodegas_documentos ";            $sql .= "WHERE  documento = ".$request['temporal']."; ";                     if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;            }       function ObtenerInformacionUsuario($usuario)		{			$sql .= "SELECT	nombre ";			$sql .= "FROM		system_usuarios "; 			$sql .= "WHERE	usuario_id = ".$usuario." ";								if(!$rst = $this->ConexionBaseDatos($sql))				return false;						$datos = array();			if(!$rst->EOF)			{				$datos =  $rst->GetRowAssoc($ToUpper = false);				$rst->MoveNext();		  }			$rst->Close();			return $datos;		}						function ConsultarDevolucion_Cliente($bodegas_doc_id,$numeracion)		{			$sql = "			SELECT 			c.tipo_id_tercero || ' -' ||c.tercero_id || ' : ' || c.nombre_tercero as cliente,			c.direccion, 				c.telefono, 				c.fax, 				c.email, 				c.celular,			g.pais || ' - ' || f.departamento ||' - ' ||e.municipio as localizacion,			h.prefijo,			i.observacion,			d.codigo_producto,			fc_descripcion_producto(d.codigo_producto) as producto,			d.cantidad,			d.total_costo			FROM			rc_devoluciones_ventas AS a			JOIN fac_facturas_contado AS b ON (a.prefijo_factura = b.prefijo)			AND (a.factura_fiscal = b.factura_fiscal)			JOIN terceros as c ON (b.tipo_id_tercero = c.tipo_id_tercero)			AND (b.tercero_id = c.tercero_id)			JOIN bodegas_documentos_d as d ON (a.bodegas_doc_id = d.bodegas_doc_id)			AND (a.bodegas_numeracion = d.numeracion)			JOIN tipo_mpios as e ON (c.tipo_pais_id = e.tipo_pais_id)			AND (c.tipo_dpto_id = e.tipo_dpto_id)			AND (c.tipo_mpio_id = e.tipo_mpio_id)			JOIN tipo_dptos as f ON (e.tipo_pais_id = f.tipo_pais_id)			AND (e.tipo_dpto_id = f.tipo_dpto_id)			JOIN tipo_pais as g ON (f.tipo_pais_id = g.tipo_pais_id)			JOIN bodegas_doc_numeraciones as h ON (a.bodegas_doc_id = h.bodegas_doc_id)			JOIN bodegas_documentos as i ON (d.bodegas_doc_id = i.bodegas_doc_id)			AND (d.numeracion = i.numeracion)			WHERE TRUE			AND a.bodegas_doc_id = '".trim($bodegas_doc_id)."'			AND a.bodegas_numeracion = '".trim($numeracion)."';";				  if(!$rst = $this->ConexionBaseDatos($sql))	return false;              $datos = array();              while (!$rst->EOF)              {              $datos[] = $rst->GetRowAssoc($ToUpper = false);              $rst->MoveNext();              }              $rst->Close();              return $datos;   		}		  } ?>