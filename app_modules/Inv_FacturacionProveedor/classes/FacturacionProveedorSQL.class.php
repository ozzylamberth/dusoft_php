<?php/** * @package IPSOFT-SIIS * @version $Id: ContratacionProductosClienteSQL.class.php, * @copyright (C) 2009 IPSOFT - SA (www.ipsoft-sa.com) * @author Mauricio Adrian Medina Santacruz *//** * Clase : ContratacionProductosSQL *  *   * @package IPSOFT-SIIS * @version $Revision: 1.12 $ * @copyright (C) 2009 IPSOFT - SA (www.ipsoft-sa.com) * @author Mauricio Adrian Medina Santacruz */class FacturacionProveedorSQL extends ConexionBD {    /*     * Constructor de la clase     */    function FacturacionProveedorSQL() {            }    /**     * Funcion donde se verifica el permiso del usuario para el ingreso al modulo     * @return array $datos vector que contiene la informacion de la consulta del codigo de     * la empresa y la razon social     */    function ConsultarTipoId() {        //   $this->debug=true;        $sql = "SELECT    tipo_id_tercero, descripcion ";        $sql .= "FROM      tipo_id_terceros ";        $sql .= "ORDER BY  tipo_id_tercero, descripcion ";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        while (!$rst->EOF) {            $datos[] = $rst->GetRowAssoc($ToUpper);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    /**     * Funcion donde se Consulta la Informacion del Proveedor y se realizan los      * filtros de busqueda teniendo en cuenta diferentes  parametros de busqueda     * @param array $filtro vector con los datos del request donde se encuentra el      * parametos de busqueda     * @param array $offset vector con los datos del request donde se encuentra el     * parametos de busqueda     * @return array $datos vector que contiene la informacion consultada del paciente     */    function ObtenerTerceros($TipoIdTercero, $TerceroId, $Descripcion, $offset) {        //$this->debug=true;        $sql = "SELECT    t.*,						 invp.* ";        $sql .= "FROM    terceros t,						 terceros_proveedores invp ";        $sql .=" WHERE   t.tercero_id ILIKE '%" . $TerceroId . "%'						 AND						 t.tipo_id_tercero ILIKE '%" . $TipoIdTercero . "%'						 AND						 t.nombre_tercero ILIKE '%" . $Descripcion . "%'						 and						 t.tercero_id = invp.tercero_id						 and						 t.tipo_id_tercero = invp.tipo_id_tercero						 and invp.codigo_proveedor_id IN (															Select c.codigo_proveedor_id															from															compras_ordenes_pedidos c															where															c.empresa_id='" . $_REQUEST['datos']['empresa'] . "'															)		";        if (!$this->ProcesarSqlConteo("SELECT COUNT(*) FROM(" . $sql . ") AS A", $offset))            return false;        $sql .= " ORDER BY t.nombre_tercero ";        $sql .= "LIMIT " . $this->limit . " OFFSET " . $this->offset . " ";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        while (!$rst->EOF) {            $datos[] = $rst->GetRowAssoc($ToUpper = false);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    /*     * Funcion donde se consulta  informacion completa del  Proveedor.     * @param string $noId cadena con el valor del numero de identificacion     * @param string $tipoId cadena con el valor del tipo de identificacion     * @return array $datos vector con la informacion de los Proveedor      */    function ConsultarTerceroProveedor($CodigoProveedorId) {        //$this->debug=true;        $sql = "                SELECT a.*, b.*                 FROM terceros a                 inner join terceros_proveedores b on a.tercero_id=b.tercero_id and a.tipo_id_tercero = b.tipo_id_tercero                WHERE b.codigo_proveedor_id = {$CodigoProveedorId} ";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        while (!$rst->EOF) {            $datos[] = $rst->GetRowAssoc($ToUpper);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    /*     * Funcion donde se consulta la Informacion de la Empresa.     * @return array $datos vector con la informacion de la Empresa.      */    function ConsultarEmpresa($EmpresaId) {        //  $this->debug=true;        $sql = "SELECT ep.empresa_id, ep.tipo_id_tercero,  ep.id, ep.razon_social, ep.representante_legal, ep.direccion, ep.telefonos, ep.fax, ep.email, ep.codigo_sgsss, ep.tipo_pais_id, ep.tipo_dpto_id, ep.tipo_mpio_id, tm.municipio, td.departamento ";        $sql .= "FROM   empresas ep, tipo_mpios tm, tipo_dptos td ";        $sql .= "WHERE  ep.tipo_dpto_id = tm.tipo_dpto_id  ";        $sql .= "and    ep.tipo_mpio_id = tm.tipo_mpio_id ";        $sql .= "and    ep.tipo_dpto_id= td.tipo_dpto_id ";        $sql .= "and    ep.empresa_id = '" . $EmpresaId . "' ";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        if (!$rst->EOF) {            $datos = $rst->GetRowAssoc($ToUpper);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    /*     * Funcion donde se consulta  consulta un contato vigente con un tercero     * @return array $datos vector con la informacion del contrato     */    function ConsultarOrdenesCompraProveedor($EmpresaId, $CodigoProveedorId, $fecha_Inicio, $Fecha_Final, $offset) {        //$this->debug=true;        $ctl = AutoCarga::factory("ClaseUtil");        $sql = "SELECT     			   c.*,			   u.* ";        $sql .= " FROM     					compras_ordenes_pedidos c,					system_usuarios u ";        $sql .= "WHERE     					c.codigo_proveedor_id=" . $CodigoProveedorId . " 					and c.empresa_id='" . $EmpresaId . "' 					and	c.usuario_id = u.usuario_id ";        if ($fecha_Inicio) {            $sql .= "AND   c.fecha_orden::date >= '" . $this->DividirFecha($fecha_Inicio) . "'::date ";        }        if ($Fecha_Final) {            $sql .= "AND   c.fecha_orden::date <= '" . $this->DividirFecha($Fecha_Final) . "'::date ";        }        if (!$this->ProcesarSqlConteo("SELECT COUNT(*) FROM(" . $sql . ") AS A", $offset))            return false;        $sql .= " ORDER BY c.fecha_orden ";        $sql .= "LIMIT " . $this->limit . " OFFSET " . $this->offset . " ";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        while (!$rst->EOF) {            $datos[] = $rst->GetRowAssoc($ToUpper);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    function ConsultarRecepcionesParciales($EmpresaId, $OrdenPedidoId, $codigo_proveedor_id) {        /* $this->debug=true; */        $ctl = AutoCarga::factory("ClaseUtil");        if ($OrdenPedidoId != "") {            $sql = "SELECT		a.*,		c.*,		b.observacion		FROM		inv_recepciones_parciales AS a		JOIN compras_ordenes_pedidos as b ON (a.orden_pedido_id = b.orden_pedido_id)		AND (a.empresa_id = '" . $EmpresaId . "')		JOIN system_usuarios as c ON (a.usuario_id = c.usuario_id)		WHERE		b.orden_pedido_id = '" . $OrdenPedidoId . "' ";            $sql .= " AND sw_facturado = '0' ";            $sql .= " order by a.recepcion_parcial_id ";        } else        if ($codigo_proveedor_id != "") {            $sql .= "                    SELECT a.*, c.*, b.observacion                    FROM inv_recepciones_parciales AS a                    JOIN compras_ordenes_pedidos as b ON a.orden_pedido_id = b.orden_pedido_id                     JOIN system_usuarios as c ON a.usuario_id = c.usuario_id                    WHERE b.codigo_proveedor_id = '{$codigo_proveedor_id}' AND a.empresa_id = '{$EmpresaId}' AND sw_facturado = '0'                      order by a.recepcion_parcial_id ";        }        /* echo "<pre>";          var_dump($sql);          echo "</pre>";          exit(); */        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        while (!$rst->EOF) {            $datos[] = $rst->GetRowAssoc($ToUpper);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    function ConsultarRecepcionesParcialesRecepcion($EmpresaId, $OrdenPedidoId, $codigo_proveedor_id,$recepcion_parcial_id) {        /* $this->debug=true; */        $ctl = AutoCarga::factory("ClaseUtil");        if ($OrdenPedidoId != "") {            $sql = "SELECT                        b.observacion                        FROM                        inv_recepciones_parciales AS a                        JOIN compras_ordenes_pedidos as b ON (a.orden_pedido_id = b.orden_pedido_id)                        AND (a.empresa_id = '" . $EmpresaId . "')                        JOIN system_usuarios as c ON (a.usuario_id = c.usuario_id)                        WHERE                        a.recepcion_parcial_id in (" . $recepcion_parcial_id . ")                         b.orden_pedido_id = '" . $OrdenPedidoId . "' ";            $sql .= " AND sw_facturado = '0' ";            $sql .= " order by a.recepcion_parcial_id ";        } else        if ($codigo_proveedor_id != "") {            $sql .= "                    SELECT  b.observacion                    FROM inv_recepciones_parciales AS a                    JOIN compras_ordenes_pedidos as b ON a.orden_pedido_id = b.orden_pedido_id                     JOIN system_usuarios as c ON a.usuario_id = c.usuario_id                    WHERE b.codigo_proveedor_id = '{$codigo_proveedor_id}' AND a.empresa_id = '{$EmpresaId}' AND sw_facturado = '0'                      AND    a.recepcion_parcial_id  in (" . $recepcion_parcial_id . ")                     order by a.recepcion_parcial_id ";        }        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        $coma="\n";        $datos2=" ";        while (!$rst->EOF) {            $datos = $rst->GetRowAssoc($ToUpper);            $datos2 .= $coma.'- '.$datos['observacion'];            $coma="\n";            $rst->MoveNext();        }        $rst->Close();        return trim($datos2);    }    function ConsultarObservaciones_OrdenCompra($OrdenPedidoId) {        //$this->debug=true;        $ctl = AutoCarga::factory("ClaseUtil");        $sql = "      Select      *      from      compras_ordenes_pedidos ";        $sql .= "WHERE           orden_pedido_id=" . $OrdenPedidoId . ";";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        while (!$rst->EOF) {            $datos = $rst->GetRowAssoc($ToUpper);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    function DetalleRecepcionParcial($EmpresaId, $orden_pedido_id, $recepcion_parcial_id) {        $sql = "            Select                           grp.descripcion as Grupo,                          cla.descripcion as Clase,                          sub.descripcion as Subclase,                          fc_descripcion_producto(prod.codigo_producto) as descripcion,                          prod.codigo_producto,                          --prod.descripcion,                          prod.contenido_unidad_venta || ' X ' || uni.descripcion  as presentacion,                          prod.porc_iva as iva,                          grp.sw_medicamento,						  irp.*                    from                          inv_grupos_inventarios grp,                          inv_clases_inventarios cla,                          inv_subclases_inventarios sub,                          inventarios_productos prod,                          unidades uni,						  inv_recepciones_parciales_d irp						                                                where                          prod.subclase_id = sub.subclase_id                          and sub.clase_id = prod.clase_id                          and sub.grupo_id = prod.grupo_id                          and sub.clase_id = cla.clase_id                          and cla.grupo_id = prod.grupo_id                          and cla.grupo_id = grp.grupo_id                          and prod.unidad_id = uni.unidad_id						  and  prod.codigo_producto = irp.codigo_producto						  and irp.recepcion_parcial_id= " . $recepcion_parcial_id . " ";        $sql = "                    select                     a.codigo_producto,                    fc_descripcion_producto(a.codigo_producto) as descripcion,                    a.*                    from inv_recepciones_parciales_d a                     /*inner join inv_recepciones_parciales e on a.recepcion_parcial_id = e.recepcion_parcial_id                    inner join inventarios f on a.codigo_producto = f.codigo_producto and e.empresa_id = f.empresa_id                    inner join inventarios_productos b on f.codigo_producto = b.codigo_producto                    inner join inv_subclases_inventarios as c ON b.grupo_id = c.grupo_id and b.clase_id = c.clase_id and b.subclase_id = c.subclase_id                    inner join inv_clases_inventarios as d ON c.grupo_id = d.grupo_id and c.clase_id = d.clase_id */                    where a.recepcion_parcial_id= {$recepcion_parcial_id} ";        /* echo "<pre>";          var_dump($sql);          echo "</pre>";          exit(); */        //$sql .= "ORDER BY prod.descripcion ASC ";        $sql .= "ORDER BY 2 ASC ";        if (!$resultado = $this->ConexionBaseDatos($sql))            return false;        $documentos = Array();        while (!$resultado->EOF) {            $documentos[] = $resultado->GetRowAssoc($ToUpper = false);            $resultado->MoveNext();        }        $resultado->Close();        // return $sql;        return $documentos;    }    function ConsultarProductosContrato($ContratoId) {        //$this->debug = true;        $sql = "SELECT     ";        $sql .= "           PROD.codigo_producto, ";        $sql .= "           PROD.descripcion,";        $sql .= "           PROD.contenido_unidad_venta || ' X ' || UNID.descripcion  as presentacion,";        $sql .= "           DET.precio, ";        $sql .= "           DET.valor_pactado, ";        $sql .= "           DET.contrato_produc_prov_det_id as detalle, ";        $sql .= " 		  cla.descripcion as Clase,";        $sql .= "		      sub.descripcion as Subclase ";        $sql .= "FROM      ";        $sql .= "           contratacion_produc_prov_detalle  DET, ";        $sql .= "           inventarios_productos PROD,						  unidades UNID,						  inv_subclases_inventarios sub,						  inv_clases_inventarios cla";        $sql .= " WHERE    DET.contratacion_prod_id= '" . $ContratoId . "' 						  and 						  PROD.codigo_producto=DET.codigo_producto						  and						  PROD.unidad_id = UNID.unidad_id						  AND	                      PROD.subclase_id = sub.subclase_id                          and						  PROD.clase_id = sub.clase_id                          and                          PROD.grupo_id = sub.grupo_id                          and                          cla.clase_id = sub.clase_id						  AND						  sub.grupo_id = cla.grupo_id						  ";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        while (!$rst->EOF) {            $datos[] = $rst->GetRowAssoc($ToUpper);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    function IngresarFacturaCabecera($Formulario, $Datos, $DatosProveedor, $Parametros_Retencion) {        //$this->debug=true;        $this->ConexionTransaccion();        $porcentaje_rtf = '0';        $porcentaje_ica = '0';        $porcentaje_reteiva = '0';        if ($Parametros_Retencion['sw_rtf'] == '2' || $Parametros_Retencion['sw_rtf'] == '3')            $porcentaje_rtf = $DatosProveedor[0]['porcentaje_rtf'];        if ($Parametros_Retencion['sw_ica'] == '2' || $Parametros_Retencion['sw_ica'] == '3')            $porcentaje_ica = $DatosProveedor[0]['porcentaje_ica'];        if ($Parametros_Retencion['sw_reteiva'] == '2' || $Parametros_Retencion['sw_reteiva'] == '3')            $porcentaje_reteiva = $DatosProveedor[0]['porcentaje_reteiva'];        $sql = "INSERT INTO inv_facturas_proveedores( ";        $sql .= "       numero_factura , ";        $sql .= "       empresa_id, ";        $sql .= "       centro_utilidad, ";        $sql .= "       bodega, ";        $sql .= "       codigo_proveedor_id, ";        $sql .= "       observaciones, ";        $sql .= "       porc_ica, ";        $sql .= "       porc_rtf, ";        $sql .= "       porc_rtiva, ";        $sql .= "       valor_descuento, ";        $sql .= "       usuario_id";        $sql .= ")VALUES( ";        $sql .= "       '" . trim($Formulario['numero_factura']) . "', ";        $sql .= "       '" . $Datos[0]['empresa_id'] . "', ";        $sql .= "       '" . $Datos[0]['centro_utilidad'] . "', ";        $sql .= "       '" . $Datos[0]['bodega'] . "', ";        $sql .= "       " . trim($_REQUEST['codigo_proveedor_id']) . ", ";        $sql .= "       '" .$Formulario['observacionesfija']." || ".$Formulario['observaciones'] . "', ";        $sql .= "       " . $porcentaje_ica . ", ";        $sql .= "       " . $porcentaje_rtf . ", ";        $sql .= "       " . $porcentaje_reteiva . ", ";        $sql .= "       " . $Formulario['valor_descuento'] . ", ";        $sql .= "       " . UserGetUID() . " ";        $sql .= "       ); ";        /* echo "<pre>";          var_dump($sql);          echo "</pre>"; */        /* exit(); */        if (!$rst = $this->ConexionTransaccion($sql)) {            if (!$rst = $this->ConexionTransaccion($sqlerror))                return false;        }        else {            $this->Commit();            return true;        }    }    function IngresarFacturaCabecera_D($DetalleRecepcion, $Formulario, $codigo_proveedor_id) {        /* $this->debug=true; */        $this->ConexionTransaccion();        /* print_r($DetalleRecepcion); */        foreach ($DetalleRecepcion as $k => $Recepcion) {            $sql .= "INSERT INTO inv_facturas_proveedores_d( ";            $sql .= "       codigo_producto , ";            $sql .= "       porc_iva, ";            $sql .= "       recepcion_parcial_id, ";            $sql .= "       cantidad, ";            $sql .= "       valor, ";            $sql .= "       lote, ";            $sql .= "       fecha_vencimiento, ";            $sql .= "       numero_factura, ";            $sql .= "       item_id, ";            $sql .= "       codigo_proveedor_id ";            $sql .= ")VALUES( ";            $sql .= "       '" . $Recepcion['codigo_producto'] . "', ";            $sql .= "       " . $Recepcion['porc_iva'] . ", ";            $sql .= "       " . $Recepcion['recepcion_parcial_id'] . ", ";            $sql .= "       " . $Recepcion['cantidad'] . ", ";            $sql .= "       " . $Recepcion['valor'] . ", ";            $sql .= "       '" . $Recepcion['lote'] . "', ";            $sql .= "       '" . $Recepcion['fecha_vencimiento'] . "', ";            $sql .= "       '" . trim($Formulario['numero_factura']) . "', ";            $sql .= "       DEFAULT,";            $sql .= "       " . $codigo_proveedor_id;            $sql .= "       );   ";        }        /* echo "<pre>";          var_dump($sql);          echo "</pre>"; */        /* exit(); */        if (!$rst = $this->ConexionTransaccion($sql)) {            if (!$rst = $this->ConexionTransaccion($sqlerror))                return false;        }        else {            $this->Commit();            return true;        }    }    function CambiarEstadoRecepcionParcial($RecepcionParcialId) {        $sql = "UPDATE inv_recepciones_parciales ";        $sql .= "SET ";        $sql .= "sw_facturado = '1' ";        $sql .= " Where ";        $sql .= " recepcion_parcial_id =" . $RecepcionParcialId . ";";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        else            return true;        $rst->Close();    }    function ListarFacturasProveedor($EmpresaId, $CodigoProveedorId, $fecha_Inicio, $Fecha_Final, $offset) {        //$this->debug=true;        $ctl = AutoCarga::factory("ClaseUtil");        /* $sql = "SELECT               c.*,          u.* ";          $sql .= " FROM          inv_facturas_proveedores c,          system_usuarios u ";          $sql .= "WHERE          c.codigo_proveedor_id=" . $CodigoProveedorId . "          and          c.empresa_id='" . $EmpresaId . "'          and          c.usuario_id = u.usuario_id          ";          if ($fecha_Inicio) {          $sql .= "AND   c.fecha_registro::date >= '" . $this->DividirFecha($fecha_Inicio) . "'::date ";          }          if ($Fecha_Final) {          $sql .= "AND   c.fecha_registro::date <= '" . $this->DividirFecha($Fecha_Final) . "'::date ";          } */        $sql_aux = "";        if ($fecha_Inicio) {            $sql_aux .= "AND a.fecha_registro::date >= '" . $this->DividirFecha($fecha_Inicio) . "'::date ";        }        if ($Fecha_Final) {            $sql_aux .= "AND a.fecha_registro::date <= '" . $this->DividirFecha($Fecha_Final) . "'::date ";        }        $sql = "                SELECT                     a.*,                b.*,                c.estado,                case when c.estado=0 then 'Sincronizado' else 'NO sincronizado' end as descripcion_estado,                c.mensaje                FROM                     inv_facturas_proveedores a                inner join system_usuarios b on a.usuario_id = b.usuario_id                 left join logs_facturacion_proveedores_ws_fi c on a.codigo_proveedor_id  = c.codigo_proveedor_id and a.numero_factura = c.numero_factura                WHERE a.codigo_proveedor_id={$CodigoProveedorId}                 and a.empresa_id='{$EmpresaId}' and c.prefijo_nota is null                {$sql_aux} ";        /* echo "<pre>";          print_r($sql);          echo "</pre>";          exit(); */        if (!$this->ProcesarSqlConteo("SELECT COUNT(*) FROM(" . $sql . ") AS A", $offset))            return false;        $sql .= " ORDER BY c.fecha_registro ";        $sql .= "LIMIT " . $this->limit . " OFFSET " . $this->offset . " ";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        while (!$rst->EOF) {            $datos[] = $rst->GetRowAssoc($ToUpper);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    function FacturaProveedorCabecera($EmpresaId, $CodigoProveedorId, $NumeroFactura) {        //$this->debug=true;        $ctl = AutoCarga::factory("ClaseUtil");        $sql = "SELECT     			   c.*,			   u.*,			   TO_CHAR(c.fecha_registro,'YYYY') as anio_factura";        $sql .= " FROM     					inv_facturas_proveedores c,					system_usuarios u ";        $sql .= "WHERE     					c.codigo_proveedor_id=" . $CodigoProveedorId . " 					and 					c.empresa_id='" . $EmpresaId . "' 					and					c.numero_factura ='" . $NumeroFactura . "'					and					c.usuario_id = u.usuario_id 					";        $sql = "SELECT     		c.*,		u.*,		TO_CHAR(c.fecha_registro,'YYYY') as anio_factura                FROM  inv_facturas_proveedores c,		system_usuarios u                WHERE c.codigo_proveedor_id= {$CodigoProveedorId} 		and c.empresa_id='{$EmpresaId}' 		and c.numero_factura ='{$NumeroFactura}'		and c.usuario_id = u.usuario_id ";        if (!$rst = $this->ConexionBaseDatos($sql)) {            return false;        }        $datos = array();        while (!$rst->EOF) {            $datos[] = $rst->GetRowAssoc($ToUpper);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    function FacturaProveedorDetalle($EmpresaId, $CodigoProveedorId, $NumeroFactura) {        /* $this->debug=true; */        $sql = "                            SELECT                fc_descripcion_producto(a.codigo_producto) as descripcion,                a.codigo_producto,                a.porc_iva,                b.prefijo||'-'||b.numero as recepcion_parcial_id,                a.cantidad,                a.valor,                a.lote,                a.fecha_vencimiento,                a.numero_factura,                a.item_id,                a.cantidad_devuelta,                a.codigo_proveedor_id,                (a.valor/((a.porc_iva/100)+1)) as valor_unitario,                (a.valor-(a.valor/((a.porc_iva/100)+1))) as iva,                ((a.valor/((a.porc_iva/100)+1))*a.cantidad) as subtotal,                ((a.valor-(a.valor/((a.porc_iva/100)+1)))*a.cantidad) as iva_total,                (a.valor * a.cantidad) as total,                c.descripcion as documento,                 b.prefijo,                e.sw_insumos,                e.sw_medicamento,                d.codigo_cum                FROM inv_facturas_proveedores_d as a                inner join inventarios_productos d on a.codigo_producto = d.codigo_producto                inner join inv_grupos_inventarios e on d.grupo_id = e.grupo_id                JOIN inv_recepciones_parciales as b ON a.recepcion_parcial_id = b.recepcion_parcial_id                JOIN documentos as c ON b.empresa_id = c.empresa_id AND b.prefijo = c.prefijo                WHERE a.numero_factura= '{$NumeroFactura}' and a.codigo_proveedor_id = {$CodigoProveedorId}  ORDER BY a.item_id ASC ";        /* echo "<pre>";          print_r($sql);          echo "</pre>";          exit(); */        // $this->debug=true;        if (!$resultado = $this->ConexionBaseDatos($sql))            return false;        $documentos = Array();        while (!$resultado->EOF) {            $documentos[] = $resultado->GetRowAssoc($ToUpper = false);            $resultado->MoveNext();        }        $resultado->Close();        // return $sql;        return $documentos;    }    function ObtenerInformacionUsuario($usuario) {        $sql .= "SELECT	nombre ";        $sql .= "FROM		system_usuarios ";        $sql .= "WHERE	usuario_id = " . $usuario . " ";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        if (!$rst->EOF) {            $datos = $rst->GetRowAssoc($ToUpper = false);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    function DatosEmpresa($EmpresaId) {        $sql .= "SELECT	* ";        $sql .= "FROM		empresas ";        $sql .= "WHERE	empresa_id = '" . $EmpresaId . "' ";        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        $datos = array();        if (!$rst->EOF) {            $datos = $rst->GetRowAssoc($ToUpper = false);            $rst->MoveNext();        }        $rst->Close();        return $datos;    }    function obtener_prefijo_fi($empresa_id, $tipo_documento) {        $sql = "                select COALESCE(b.prefijo ,'') as prefijo_fi                from documentos a                 inner join prefijos_financiero b on a.prefijos_financiero_id = b.id                where a.prefijo='{$tipo_documento}' and a.empresa_id='{$empresa_id}' ";        if (!$resultado = $this->ConexionBaseDatos($sql))            return false;        while (!$resultado->EOF) {            $datos = $resultado->GetRowAssoc($ToUpper = false);            $resultado->MoveNext();        }        $resultado->Close();        // return $sql;        return $datos;    }    function validar_parametrizacion_prefijo_fi($empresa_id, $codigo_proveedor_id, $recepciones_parciales) {        $sql = "                SELECT                 case when d.prefijo is null then 'no' else 'si' end as parametrizado                FROM inv_recepciones_parciales AS a                JOIN compras_ordenes_pedidos as b ON a.orden_pedido_id = b.orden_pedido_id                 inner join documentos c on a.prefijo = c.prefijo and a.empresa_id = c.empresa_id                left join prefijos_financiero d on c.prefijos_financiero_id = d.id                WHERE b.codigo_proveedor_id = '{$codigo_proveedor_id}' AND a.empresa_id = '$empresa_id' AND sw_facturado = '0'                  and a.recepcion_parcial_id in ({$recepciones_parciales})                group by 1  ";        /* echo "<pre>";          print_r($sql);          echo "</pre>";          exit(); */        if (!$resultado = $this->ConexionBaseDatos($sql))            return false;        while (!$resultado->EOF) {            $datos = $resultado->GetRowAssoc($ToUpper = false);            $resultado->MoveNext();        }        $resultado->Close();        // return $sql;        return $datos;    }    function validar_tipos_documentos($empresa_id, $codigo_proveedor_id, $recepciones_parciales) {        $sql = "                SELECT                 a.prefijo                FROM inv_recepciones_parciales AS a                JOIN compras_ordenes_pedidos as b ON a.orden_pedido_id = b.orden_pedido_id                 WHERE b.codigo_proveedor_id = '{$codigo_proveedor_id}' AND a.empresa_id = '$empresa_id' AND sw_facturado = '0'                  and a.recepcion_parcial_id in ({$recepciones_parciales})                group by 1 ";        /* echo "<pre>";          print_r($sql);          echo "<pre>";          exit(); */        if (!$resultado = $this->ConexionBaseDatos($sql))            return false;        $datos = Array();        while (!$resultado->EOF) {            $datos[] = $resultado->GetRowAssoc($ToUpper = false);            $resultado->MoveNext();        }        $resultado->Close();        // return $sql;        return $datos;    }    function registrar_resultado_sincronizacion($codigo_proveedor_id, $numero_factura, $mensaje, $estado) {        $sql = " select * from logs_facturacion_proveedores_ws_fi where codigo_proveedor_id = {$codigo_proveedor_id} and  numero_factura = '{$numero_factura}' and prefijo_nota is null;";        if (!$resultado = $this->ConexionBaseDatos($sql))            return false;        $datos = Array();        while (!$resultado->EOF) {            $datos = $resultado->GetRowAssoc($ToUpper = false);            $resultado->MoveNext();        }        $resultado->Close();        $sql = " update logs_facturacion_proveedores_ws_fi set mensaje='{$mensaje}', estado='{$estado}' where codigo_proveedor_id = {$codigo_proveedor_id} and  numero_factura = '{$numero_factura}' and prefijo_nota is null ;";        if (count($datos) == 0) {            $sql = " INSERT INTO logs_facturacion_proveedores_ws_fi (codigo_proveedor_id, numero_factura, mensaje, estado ) VALUES ({$codigo_proveedor_id}, '{$numero_factura}', '{$mensaje}', '{$estado}'); ";        }        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        else            return true;        $rst->Close();    }    function registrar_resultado_sincronizacion_notas($codigo_proveedor_id, $numero_factura, $prefijo_nota, $numero_nota, $mensaje, $estado) {        $sql = " select * from logs_facturacion_proveedores_ws_fi where prefijo_nota='{$prefijo_nota}' and numero_nota={$numero_nota};";        if (!$resultado = $this->ConexionBaseDatos($sql))            return false;        $datos = Array();        while (!$resultado->EOF) {            $datos = $resultado->GetRowAssoc($ToUpper = false);            $resultado->MoveNext();        }        $resultado->Close();        $sql = " update logs_facturacion_proveedores_ws_fi set mensaje='{$mensaje}', estado='{$estado}' where prefijo_nota='{$prefijo_nota}' and numero_nota={$numero_nota};";        if (count($datos) == 0) {            $sql = " INSERT INTO logs_facturacion_proveedores_ws_fi (codigo_proveedor_id, numero_factura, mensaje, estado, prefijo_nota, numero_nota ) VALUES ({$codigo_proveedor_id}, '{$numero_factura}', '{$mensaje}', '{$estado}', '{$prefijo_nota}', {$numero_nota}); ";        }        if (!$rst = $this->ConexionBaseDatos($sql))            return false;        else            return true;        $rst->Close();    }}?>