<?php  /**  * @package IPSOFT-SIIS  * @version $Id: ContratacionProductosClienteSQL.class.php,  * @copyright (C) 2009 IPSOFT - SA (www.ipsoft-sa.com)  * @author Mauricio Adrian Medina Santacruz  */   /**  * Clase : ContratacionProductosSQL  *   *    * @package IPSOFT-SIIS  * @version $Revision: 1.12 $  * @copyright (C) 2009 IPSOFT - SA (www.ipsoft-sa.com)  * @author Mauricio Adrian Medina Santacruz  */   class FacturacionProveedorSQL extends ConexionBD  {      /*      * Constructor de la clase      */      function FacturacionProveedorSQL(){}      /**      * Funcion donde se verifica el permiso del usuario para el ingreso al modulo      * @return array $datos vector que contiene la informacion de la consulta del codigo de      * la empresa y la razon social      */            function ConsultarTipoId()      {        //   $this->debug=true;        $sql  = "SELECT    tipo_id_tercero, descripcion ";        $sql .= "FROM      tipo_id_terceros ";        $sql .= "ORDER BY  tipo_id_tercero, descripcion ";        if(!$rst = $this->ConexionBaseDatos($sql))        return false;        $datos = array();        while(!$rst->EOF)        {        $datos[] = $rst->GetRowAssoc($ToUpper);        $rst->MoveNext();        }        $rst->Close();        return $datos;      }      /**      * Funcion donde se Consulta la Informacion del Proveedor y se realizan los       * filtros de busqueda teniendo en cuenta diferentes  parametros de busqueda      * @param array $filtro vector con los datos del request donde se encuentra el       * parametos de busqueda      * @param array $offset vector con los datos del request donde se encuentra el      * parametos de busqueda      * @return array $datos vector que contiene la informacion consultada del paciente      */      function ObtenerTerceros($TipoIdTercero,$TerceroId,$Descripcion,$offset)      {        //$this->debug=true;		$sql= "SELECT    t.*,						 invp.* ";        $sql .= "FROM    terceros t,						 terceros_proveedores invp ";        $sql .=" WHERE   t.tercero_id ILIKE '%".$TerceroId."%'						 AND						 t.tipo_id_tercero ILIKE '%".$TipoIdTercero."%'						 AND						 t.nombre_tercero ILIKE '%".$Descripcion."%'						 and						 t.tercero_id = invp.tercero_id						 and						 t.tipo_id_tercero = invp.tipo_id_tercero						 and invp.codigo_proveedor_id IN (															Select c.codigo_proveedor_id															from															inv_facturas_proveedores c															where															c.empresa_id='".$_REQUEST['datos']['empresa']."'															)		";        		if(!$this->ProcesarSqlConteo("SELECT COUNT(*) FROM(".$sql.") AS A",$offset))        return false;             		$sql .= " ORDER BY t.nombre_tercero ";		$sql .= "LIMIT ".$this->limit." OFFSET ".$this->offset." ";				        if(!$rst = $this->ConexionBaseDatos($sql))			return false;        $datos = array();        while (!$rst->EOF)        {        $datos[] = $rst->GetRowAssoc($ToUpper = false);        $rst->MoveNext();        }        $rst->Close();        return $datos;      }      /*      * Funcion donde se consulta  informacion completa del  Proveedor.      * @param string $noId cadena con el valor del numero de identificacion      * @param string $tipoId cadena con el valor del tipo de identificacion      * @return array $datos vector con la informacion de los Proveedor       */      function ConsultarTerceroProveedor($CodigoProveedorId)      {       //$this->debug=true;        $sql  = "SELECT   t.*,						  tp.* ";        $sql .= "FROM     terceros t,						  terceros_proveedores tp ";        $sql .= " WHERE   tp.codigo_proveedor_id = ".$CodigoProveedorId. " ";        $sql .= "         and tp.tipo_id_tercero = t.tipo_id_tercero ";        $sql .= "         and tp.tercero_id = t.tercero_id ";                if(!$rst = $this->ConexionBaseDatos($sql))        return false;        $datos = array();        while(!$rst->EOF)        {        $datos[] = $rst->GetRowAssoc($ToUpper);        $rst->MoveNext();        }        $rst->Close();        return $datos;      }      /*      * Funcion donde se consulta la Informacion de la Empresa.      * @return array $datos vector con la informacion de la Empresa.       */      function ConsultarEmpresa($EmpresaId)       {        //  $this->debug=true;        $sql  = "SELECT ep.empresa_id, ep.tipo_id_tercero,  ep.id, ep.razon_social, ep.representante_legal, ep.direccion, ep.telefonos, ep.fax, ep.email, ep.codigo_sgsss, ep.tipo_pais_id, ep.tipo_dpto_id, ep.tipo_mpio_id, tm.municipio, td.departamento ";        $sql .= "FROM   empresas ep, tipo_mpios tm, tipo_dptos td ";        $sql .= "WHERE  ep.tipo_dpto_id = tm.tipo_dpto_id  ";        $sql .= "and    ep.tipo_mpio_id = tm.tipo_mpio_id ";        $sql .= "and    ep.tipo_dpto_id= td.tipo_dpto_id ";        $sql .= "and    ep.empresa_id = '".$EmpresaId."' ";        if(!$rst = $this->ConexionBaseDatos($sql))        return false;        $datos = array();        if(!$rst->EOF)        {        $datos = $rst->GetRowAssoc($ToUpper);        $rst->MoveNext();        }        $rst->Close();        return $datos;      }		   /*      * Funcion donde se consulta  consulta un contato vigente con un tercero      * @return array $datos vector con la informacion del contrato      */            function ConsultarOrdenesCompraProveedor($EmpresaId,$CodigoProveedorId,$fecha_Inicio,$Fecha_Final,$offset)        {      //$this->debug=true;      $ctl = AutoCarga::factory("ClaseUtil");	  $sql  = "SELECT     			   c.*,			   u.* ";      $sql .= " FROM     					compras_ordenes_pedidos c,					system_usuarios u ";      $sql .= "WHERE     					c.codigo_proveedor_id=".$CodigoProveedorId." 					and 					c.empresa_id='".$EmpresaId. "' 					and					c.usuario_id = u.usuario_id 					";	  if($fecha_Inicio)          {          $sql .= "AND   c.fecha_orden::date >= '".$this->DividirFecha($fecha_Inicio)."'::date ";          }          if($Fecha_Final)          {          $sql .= "AND   c.fecha_orden::date <= '".$this->DividirFecha($Fecha_Final)."'::date ";          }	       	 if(!$this->ProcesarSqlConteo("SELECT COUNT(*) FROM(".$sql.") AS A",$offset))        return false;             		$sql .= " ORDER BY c.fecha_orden ";		$sql .= "LIMIT ".$this->limit." OFFSET ".$this->offset." ";		      if(!$rst = $this->ConexionBaseDatos($sql))      return false;      $datos = array();      while(!$rst->EOF)      {      $datos[] = $rst->GetRowAssoc($ToUpper);      $rst->MoveNext();      }      $rst->Close();      return $datos;      }	  	  	  	  function ConsultarRecepcionesParciales($EmpresaId,$OrdenPedidoId)        {      //$this->debug=true;      $ctl = AutoCarga::factory("ClaseUtil");	  $sql  = "SELECT     			   rp.*,			   u.* ";      $sql .= " FROM     					inv_recepciones_parciales rp,					system_usuarios u ";      $sql .= "WHERE     					rp.orden_pedido_id=".$OrdenPedidoId." 					and 					rp.empresa_id='".$EmpresaId. "' 					and					rp.usuario_id = u.usuario_id ";	  	  $sql .= " order by rp.recepcion_parcial_id ";			        if(!$rst = $this->ConexionBaseDatos($sql))      return false;      $datos = array();      while(!$rst->EOF)      {      $datos[] = $rst->GetRowAssoc($ToUpper);      $rst->MoveNext();      }      $rst->Close();      return $datos;      }function DetalleRecepcionParcial($EmpresaId,$orden_pedido_id,$recepcion_parcial_id)  {	  $sql="            Select                           grp.descripcion as Grupo,                          cla.descripcion as Clase,                          sub.descripcion as Subclase,                          prod.codigo_producto,                          prod.descripcion,                          prod.contenido_unidad_venta || ' X ' || uni.descripcion  as presentacion,                          prod.porc_iva as iva,                          grp.sw_medicamento,						  irp.*                    from                          inv_grupos_inventarios grp,                          inv_clases_inventarios cla,                          inv_subclases_inventarios sub,                          inventarios_productos prod,                          unidades uni,						  inv_recepciones_parciales_d irp						                                                where                          prod.subclase_id = sub.subclase_id                          and                          sub.clase_id = prod.clase_id                          and                          sub.grupo_id = prod.grupo_id                          and                          sub.clase_id = cla.clase_id                          and                          cla.grupo_id = prod.grupo_id                          and                          cla.grupo_id = grp.grupo_id                          and                          prod.unidad_id = uni.unidad_id						  and						  prod.codigo_producto = irp.codigo_producto						  and						  irp.recepcion_parcial_id= ".$recepcion_parcial_id." ";	$sql .="";            $sql .= "ORDER BY prod.descripcion ASC ";  // $this->debug=true;  if(!$resultado = $this->ConexionBaseDatos($sql))     return false;             $documentos=Array();     while(!$resultado->EOF)     {       $documentos[] = $resultado->GetRowAssoc($ToUpper = false);       $resultado->MoveNext();     }          $resultado->Close();     // return $sql;      return $documentos;   }    function ConsultarProductosContrato($ContratoId)      {	//$this->debug = true;      $sql  = "SELECT     ";            $sql .= "           PROD.codigo_producto, " ;      $sql .= "           PROD.descripcion," ;      $sql .= "           PROD.contenido_unidad_venta || ' X ' || UNID.descripcion  as presentacion," ;      $sql .= "           DET.precio, " ;      $sql .= "           DET.valor_pactado, " ;      $sql .= "           DET.contrato_produc_prov_det_id as detalle, " ;	  $sql .= " 		  cla.descripcion as Clase,";      $sql .= "		      sub.descripcion as Subclase ";                       $sql  .= "FROM      ";      $sql .= "           contratacion_produc_prov_detalle  DET, " ;      $sql .= "           inventarios_productos PROD,						  unidades UNID,						  inv_subclases_inventarios sub,						  inv_clases_inventarios cla";						        $sql  .= " WHERE    DET.contratacion_prod_id= '".$ContratoId."' 						  and 						  PROD.codigo_producto=DET.codigo_producto						  and						  PROD.unidad_id = UNID.unidad_id						  AND	                      PROD.subclase_id = sub.subclase_id                          and						  PROD.clase_id = sub.clase_id                          and                          PROD.grupo_id = sub.grupo_id                          and                          cla.clase_id = sub.clase_id						  AND						  sub.grupo_id = cla.grupo_id						  ";            if(!$rst = $this->ConexionBaseDatos($sql))      return false;      $datos = array();      while(!$rst->EOF)      {      $datos[] = $rst->GetRowAssoc($ToUpper);      $rst->MoveNext();      }      $rst->Close();      return $datos;      }	function RegistrarVerificacionFacturaProveedor($Formulario)	{	//$this->debug=true;	$sql  = " UPDATE inv_facturas_proveedores ";    $sql .= " SET ";    $sql .= " sw_verificado = '1', ";    $sql .= " usuario_id_verificador = ".UserGetUID().", ";    $sql .= " fecha_verificacion = NOW(), ";    $sql .= " observacion_verificacion = '".$Formulario['observacion_verificacion']."', ";    $sql .= " calificacion_verificacion = '".$Formulario['calificacion_verificacion']."' ";	$sql .= " Where ";    $sql .= " numero_factura = '".$Formulario['numero_factura']."' ";    $sql .= " AND ";    $sql .= " codigo_proveedor_id =".$Formulario['codigo_proveedor_id'].";";	  			if(!$rst = $this->ConexionBaseDatos($sql)) 			return false;				else				return true;							$rst->Close();					}    		function ListarFacturasProveedor($EmpresaId,$CodigoProveedorId,$fecha_Inicio,$Fecha_Final,$offset)        {      //$this->debug=true;      $ctl = AutoCarga::factory("ClaseUtil");	  $sql  = "SELECT     			   c.*,			   u.* ";      $sql .= " FROM     					inv_facturas_proveedores c,					system_usuarios u ";      $sql .= "WHERE     					c.codigo_proveedor_id=".$CodigoProveedorId." 					and 					c.empresa_id='".$EmpresaId. "' 					and					c.usuario_id = u.usuario_id 					";	  if($fecha_Inicio)          {          $sql .= "AND   c.fecha_registro::date >= '".$this->DividirFecha($fecha_Inicio)."'::date ";          }          if($Fecha_Final)          {          $sql .= "AND   c.fecha_registro::date <= '".$this->DividirFecha($Fecha_Final)."'::date ";          }	       	 if(!$this->ProcesarSqlConteo("SELECT COUNT(*) FROM(".$sql.") AS A",$offset))        return false;             		$sql .= " ORDER BY c.fecha_registro ";		$sql .= "LIMIT ".$this->limit." OFFSET ".$this->offset." ";		      if(!$rst = $this->ConexionBaseDatos($sql))      return false;      $datos = array();      while(!$rst->EOF)      {      $datos[] = $rst->GetRowAssoc($ToUpper);      $rst->MoveNext();      }      $rst->Close();      return $datos;      }	  	  	  function FacturaProveedorCabecera($EmpresaId,$CodigoProveedorId,$NumeroFactura)        {      //$this->debug=true;      $ctl = AutoCarga::factory("ClaseUtil");	  $sql  = "SELECT     			   c.*,			   u.*,			   TO_CHAR(c.fecha_registro,'YYYY') as anio_factura";      $sql .= " FROM     					inv_facturas_proveedores c,					system_usuarios u ";      $sql .= "WHERE     					c.codigo_proveedor_id=".$CodigoProveedorId." 					and 					c.empresa_id='".$EmpresaId. "' 					and					c.numero_factura ='".$NumeroFactura."'					and					c.usuario_id = u.usuario_id 					";	      if(!$rst = $this->ConexionBaseDatos($sql))      return false;      $datos = array();      while(!$rst->EOF)      {      $datos[] = $rst->GetRowAssoc($ToUpper);      $rst->MoveNext();      }      $rst->Close();      return $datos;      }	  	function FacturaProveedorDetalle($EmpresaId,$CodigoProveedorId,$NumeroFactura)  {	  //$this->debug=true;	  $sql="			SELECT			fc_descripcion_producto(a.codigo_producto) as descripcion,			a.codigo_producto,			a.porc_iva,			a.recepcion_parcial_id,			a.cantidad,			a.valor,			a.lote,			a.fecha_vencimiento,			a.numero_factura,			a.item_id,			a.cantidad_devuelta,			a.codigo_proveedor_id,			(a.valor/((a.porc_iva/100)+1)) as valor_unitario,			(a.valor-(a.valor/((a.porc_iva/100)+1))) as iva,			((a.valor/((a.porc_iva/100)+1))*a.cantidad) as subtotal,			((a.valor-(a.valor/((a.porc_iva/100)+1)))*a.cantidad) as iva_total,			(a.valor * a.cantidad) as total			FROM			inv_facturas_proveedores_d as a            WHERE                a.numero_factura= '".$NumeroFactura."'             and a.codigo_proveedor_id = ".$CodigoProveedorId." ";	$sql .=" ";            $sql .= "ORDER BY a.item_id ASC ";  // $this->debug=true;  if(!$resultado = $this->ConexionBaseDatos($sql))     return false;             $documentos=Array();     while(!$resultado->EOF)     {       $documentos[] = $resultado->GetRowAssoc($ToUpper = false);       $resultado->MoveNext();     }          $resultado->Close();     // return $sql;      return $documentos;   }					function ObtenerInformacionUsuario($usuario)		{			$sql .= "SELECT	nombre ";			$sql .= "FROM		system_usuarios "; 			$sql .= "WHERE	usuario_id = ".$usuario." ";								if(!$rst = $this->ConexionBaseDatos($sql))				return false;						$datos = array();			if(!$rst->EOF)			{				$datos =  $rst->GetRowAssoc($ToUpper = false);				$rst->MoveNext();		  }			$rst->Close();			return $datos;		}						function DatosEmpresa($EmpresaId)		{			$sql .= "SELECT	* ";			$sql .= "FROM		empresas "; 			$sql .= "WHERE	empresa_id = '".$EmpresaId."' ";								if(!$rst = $this->ConexionBaseDatos($sql))				return false;						$datos = array();			if(!$rst->EOF)			{				$datos =  $rst->GetRowAssoc($ToUpper = false);				$rst->MoveNext();		  }			$rst->Close();			return $datos;		}	}?>