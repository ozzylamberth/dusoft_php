<?php  /**  * @package IPSOFT-SIIS  * @version $Id: app_Inv_AuditoriaFacturasProveedor_controller.php,v 1.14 2010/01/26 22:40:55 sandra Exp $Revision: 1.14 $  * @copyright (C) 2009 IPSOFT - SA (www.ipsoft-sa.com)  * @author Sandra Viviana Pantoja Torres   */  /**  * Clase Control: Inv_AuditoriaFacturasProveedor  * Clase encargada del control de llamado de metodos en el modulo  *  * @package IPSOFT-SIIS  * @version $Revision: 1.14 $request = $_REQUEST;  /*/ class  app_Inv_AuditoriaFacturasProveedor_controller extends classModulo{    /**    * Constructor de la clase    */    function app_Inv_AuditoriaFacturasProveedor_controller(){}      /**      * Funcion principal del modulo      * @return boolean      */      function Main()      {        $request = $_REQUEST;        $contratacion = AutoCarga::factory('PermisosSQL', '', 'app', 'Inv_AuditoriaFacturasProveedor');        $action['volver'] = ModuloGetURL('system', 'Menu');        $permisos = $contratacion->ObtenerPermisos();            $ttl_gral = "AUDITORIA A FACTURAS DE PROVEEDORES";        $titulo[0] = 'EMPRESAS';        $url[0] = 'app';        $url[1] = 'Inv_AuditoriaFacturasProveedor';         $url[2] = 'controller';        $url[3] = 'TercerosProveedores';         $url[4] = 'datos';        $this->salida = gui_theme_menu_acceso($ttl_gral, $titulo, $permisos, $url, $action['volver']);        return true;       }        /**        * Funcion Menu del modulo        * Funcion Menu para Todas Las Opciones Principales del Modulo        * @return boolean        */		function TercerosProveedores()		{			$request = $_REQUEST;			  		  	$action['volver'] = ModuloGetURL("app","Inv_AuditoriaFacturasProveedor","controller","Main");			$Obj_Menu=AutoCarga::factory("FacturacionProveedorHTML", "views", "app","Inv_AuditoriaFacturasProveedor");						IncludeFileModulo("RemotosFacturacionProveedor","RemoteXajax","app","Inv_AuditoriaFacturasProveedor");			$this->SetXajax(array("ListadoTerceros"),null,"ISO-8859-1");        						$sql = AutoCarga::factory("FacturacionProveedorSQL", "classes", "app", "Inv_AuditoriaFacturasProveedor");			$tipos_id = $sql->ConsultarTipoId();						$this->salida=$Obj_Menu->Formabusquedaproveedores($action,$tipos_id);			return true;      		}      	/**      * Funcion Menu Principal De Contratacion Proveedores      * @return boolean      */		function MenuPrincipal()			{			$request = $_REQUEST;								$this->IncludeJS("CrossBrowser");			$this->IncludeJS("CrossBrowserEvent");			$this->IncludeJS("CrossBrowserDrag");												$action['volver'] = ModuloGetURL("app", "Inv_AuditoriaFacturasProveedor", "controller", "TercerosProveedores")."&datos[empresa]=".$_REQUEST['datos']['empresa']."";			$act = AutoCarga::factory("FacturacionProveedorHTML", "views", "app", "Inv_AuditoriaFacturasProveedor");			$this->salida = $act->FormaMenu($action);			return true;			}					function ListarFacturas()			{			$request = $_REQUEST;			IncludeFileModulo("RemotosFacturacionProveedor","RemoteXajax","app","Inv_AuditoriaFacturasProveedor");			$this->SetXajax(array("ListarFacturasProveedor"),null,"ISO-8859-1" );			$this->IncludeJS("CrossBrowser");			$this->IncludeJS("CrossBrowserEvent");			$this->IncludeJS("CrossBrowserDrag");									$url  .= "&datos[empresa]=".$_REQUEST['datos']['empresa']."&codigo_proveedor_id=".$_REQUEST['codigo_proveedor_id']."";			$action['volver']=ModuloGetURL("app", "Inv_AuditoriaFacturasProveedor", "controller", "MenuPrincipal")."".$url;						$act = AutoCarga::factory("FacturacionProveedorHTML", "views", "app", "Inv_AuditoriaFacturasProveedor");			$sql = AutoCarga::factory("FacturacionProveedorSQL", "classes", "app", "Inv_AuditoriaFacturasProveedor");			$TerceroProveedor=$sql->ConsultarTerceroProveedor($_REQUEST['codigo_proveedor_id']);					//print_r($TerceroProveedor);			$this->salida = $act->ListarFacturasProveedor($action,$TerceroProveedor);			return true;			}						function VerFactura()			{			$request = $_REQUEST;			IncludeFileModulo("RemotosFacturacionProveedor","RemoteXajax","app","Inv_AuditoriaFacturasProveedor");			$this->SetXajax(array("VerificarFactura","Verificar"),null,"ISO-8859-1" );			$this->IncludeJS("CrossBrowser");			$this->IncludeJS("CrossBrowserEvent");			$this->IncludeJS("CrossBrowserDrag");						$url  .= "&datos[empresa]=".$_REQUEST['datos']['empresa']."&codigo_proveedor_id=".$_REQUEST['codigo_proveedor_id']."";			$action['volver']=ModuloGetURL("app", "Inv_AuditoriaFacturasProveedor", "controller", "ListarFacturas")."".$url;						$act = AutoCarga::factory("FacturacionProveedorHTML", "views", "app", "Inv_AuditoriaFacturasProveedor");			$sql = AutoCarga::factory("FacturacionProveedorSQL", "classes", "app", "Inv_AuditoriaFacturasProveedor");			$sql_2 = AutoCarga::factory("FacturasDespachoSQL", "classes", "app", "FacturasDespacho");			$TerceroProveedor=$sql->ConsultarTerceroProveedor($_REQUEST['codigo_proveedor_id']);			$FacturaProveedorCabecera=$sql->FacturaProveedorCabecera($_REQUEST['datos']['empresa'],$_REQUEST['codigo_proveedor_id'],$_REQUEST['numero_factura']);			$FacturaProveedorDetalle=$sql->FacturaProveedorDetalle($_REQUEST['datos']['empresa'],$_REQUEST['codigo_proveedor_id'],$_REQUEST['numero_factura']);			$Empresa=$sql->DatosEmpresa($FacturaProveedorCabecera[0]['empresa_id']);			$Parametros_Retencion=$sql_2->Parametros_Retencion($FacturaProveedorCabecera[0]['empresa_id'],$FacturaProveedorCabecera[0]['anio_factura']);			$UsuarioVerificador=$sql->ObtenerInformacionUsuario($FacturaProveedorCabecera[0]['usuario_id_verificador']);			//print_r($UsuarioVerificador);			$this->salida = $act->VerFacturaProveedor($action,$TerceroProveedor,$FacturaProveedorCabecera,$FacturaProveedorDetalle,$Empresa,$UsuarioVerificador,$Parametros_Retencion);			return true;			}				}?>